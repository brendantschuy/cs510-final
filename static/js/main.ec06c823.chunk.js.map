{"version":3,"sources":["images/football.png","colorHandler.js","components/NavItem.js","components/DropDownItem.js","components/Logo.js","components/Navbar.js","components/SearchBar.js","components/HomePage.js","components/ToggleButton.js","components/Ranking.js","components/RankingsPage.js","components/TeamSelect.js","components/TeamPanel.js","components/ReturnToTopButton.js","components/TeamsPage.js","components/TeamDetails.js","components/GameEvent.js","components/SchedulePage.js","components/Conference.js","components/ConferencesPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","colorHandler","colorDiff","color1","color2","c1bb","parseInt","substr","c1gg","c1rr","c2bb","c2gg","c2rr","this","euclidean","a1","a2","b1","b2","c1","c2","threshold","Math","sqrt","pow","tooDark","color","colorInt","cbb","cgg","crr","NavItem","label","children","console","log","useState","open","setOpen","textColor","setTextColor","useEffect","className","onMouseEnter","style","backgroundColor","href","toLowerCase","display","DropDownItem","text","Logo","src","require","id","alt","Navbar","teamColors","SearchBar","update","type","placeholder","textAlign","onChange","HomePage","search","setSearch","redir","setRedir","value","target","to","onClick","ToggleButton","toggle","isActive","Ranking","data","rank","school","firstPlaceVotes","points","key","replace","RankingsPage","setData","displayData","setDisplayData","currentYear","setCurrentYear","currentWeek","pollType","setPollType","fetchData","useCallback","poll","a","url","fetch","then","res","json","selectTime","polls","ranks","togglePoll","year","map","TeamSelect","opts","onSelect","opt","TeamPanel","props","alt_color","abbreviation","highlight","borderColor","ReturnToTopButton","window","scrollTo","TeamsPage","setSortDirection","loading","setLoading","team","float","conf","highlightedData","forEach","conference","sortedData","sort","b","Spinner","animation","role","TeamDetails","colorPalette","teamName","match","params","setDisplay","url1","url2","total","wins","losses","thisSchool","find","mascot","logoUrl","logos","GameEvent","forwardRef","ref","home_team","away_team","start_date","venue","dateTime","usDate","split","slice","parseDate","SchedulePage","isSearched","searchState","setSearchState","searchRef","useRef","gameObj","query","current","offsetTop","game","Conference","ConferencesPage","conferences","Object","entries","App","setTeamColors","exact","path","component","render","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ec06c823.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/football.cc65024d.png\";","//Contains helper functions to help with the color scheme\n\nconst colorHandler = {\n    /* Ensures primary & secondary colors are distinct enough to be discernible.\n     * Hex math is not fun in javascript.... */\n    colorDiff: function (color1, color2) {\n\n        const threshold = 120;\n\n        color1 = color1 ? parseInt(color1.substr(1), 16) : color1;\n        color2 = color2 ? parseInt(color2.substr(1), 16) : color2;\n\n        let c1bb = color1 % 256;\n        let c1gg = (color1 - c1bb) % 65536;\n        let c1rr = color1 - c1gg - c1bb;\n\n        c1gg /= 256;\n        c1rr /= 65536;\n\n        let c2bb = color2 % 256;\n        let c2gg = (color2 - c2bb) % 65536;\n        let c2rr = color2 - c2gg - c2bb;\n\n        c2gg /= 256;\n        c2rr /= 65536;\n\n        return this.euclidean(c1bb, c2bb, c1rr, c2rr, c1gg, c2gg, threshold);\n    },\n\n    /* Helper function which takes euclidean distance of 3 values\n     * (typically should be RGB) */\n    euclidean: function (a1, a2, b1, b2, c1, c2, threshold) {\n        return Math.sqrt(Math.pow(a1 - a2, 2) + Math.pow(b1 - b2, 2) + Math.pow(c1 - c2, 2)) > threshold;\n    },\n\n    /* Detects whether a color is too dark, subjectively, for black \n     * text to be written on it.\n     * Returns TRUE or FALSE */\n    tooDark: function (color) {\n        if(!color) return false;\n        const colorInt = parseInt(color.substr(1), 16);\n        let cbb = colorInt % 256;\n        let cgg = (colorInt - cbb) % 65536;\n        let crr = colorInt - cbb - cgg;\n\n        cgg /= 256;\n        crr /= 65536;\n\n        return (cbb + cgg + crr) / 3 < 80;\n    }\n};\n\nexport default colorHandler;\n","import React, { useState, useEffect } from 'react';\nimport colorHandler from '../colorHandler';\n\nconst NavItem = ({ label, children, color }) => {\n\n    console.log(\"teamColors = \", color[0])\n\n    const [open, setOpen] = useState();\n    const [ textColor, setTextColor ] = useState(\"#000000\");\n\n\n\n    useEffect(() => {\n        if(color && colorHandler.tooDark(color[0])) {\n            setTextColor(\"#FFFFFF\");\n            console.log(\"this is too dark\");\n            console.log(\"color[0] = \", color[0]);\n        }\n        console.log(\"use effect, not too dark\");\n        //just force update if 'loading' is updated\n    }, [children]);\n\n    return (\n        <div\n            className=\"menu-nav-item\"\n            onMouseEnter={() => setOpen(!open)}\n            style={{backgroundColor:`${color[0]}`}}\n        >\n            <span>\n                <a\n                    href={`/${label.toLowerCase()}`}\n                    className=\"menu-nav-item-link\"\n                    style={{color: `${textColor}`}}\n                >\n                    {label}\n                </a>\n            </span>\n            <div\n                className=\"menu-nav-dropdown\"\n                style={!open ? { display: \"none\" } : { display: \"none\" }}\n            >\n                {open && children}\n            </div>\n        </div>\n    )\n}\n\nexport default NavItem;","import React from 'react'\n\nconst DropDownItem = ({ text }) => {\n    return (\n        <div className=\"menu-nav-dropdown-item\">\n            {text}\n        </div>\n    )\n}\n\nexport default DropDownItem;\n","import React from 'react';\n\nconst Logo = () =>\n    <a href=\"/\">\n        <div className=\"index-header-center\">\n            <span className=\"header-text\">CFB STATS</span>\n            <img\n                src={require('../images/football.png')}\n                id=\"header-img\"\n                alt=\"Header Logo\"\n            />\n        </div>\n    </a>\nexport default Logo;","import React from 'react';\nimport NavItem from './NavItem';\nimport DropDownItem from './DropDownItem';\nimport Logo from './Logo';\nimport '../styles/App.css';\n\nconst Navbar = ({ teamColors }) =>\n    <nav>\n        <div className=\"row index-header\" style={{ backgroundColor: `${teamColors[0]}` }}>\n            <div className=\"index-header-col col-md-5\">\n                <NavItem label=\"RANKINGS\" color={teamColors}>\n                    <DropDownItem text=\"AP\" />\n                    <DropDownItem text=\"Coaches\" />\n                    <DropDownItem text=\"CFP\" />\n                </NavItem>\n                <NavItem label=\"SCHEDULE\" color={teamColors}>\n                    <span></span>\n                </NavItem>\n\n            </div>\n            <div className=\"index-header-center col-md-2\">\n                <Logo color={teamColors} />\n            </div>\n\n            <div className=\"index-header-col col-md-5\">\n\n                <NavItem label=\"TEAMS\" color={teamColors}>\n                    <DropDownItem text=\"Division I FBS\" />\n                    <DropDownItem text=\"Division I FCS\" />\n                    <DropDownItem text=\"Division II\" />\n                    <DropDownItem text=\"Division III\" />\n                    <DropDownItem text=\"By Conference\" />\n                </NavItem>\n                <NavItem label=\"CONFERENCES\" color={teamColors}>\n                    <DropDownItem text=\"2020\" />\n                    <DropDownItem text=\"2019\" />\n                    <DropDownItem text=\"2018\" />\n                    <DropDownItem text=\"Earlier...\" />\n                </NavItem>\n            </div>\n        </div>\n    </nav>\n\nexport default Navbar;","import React from 'react';\n\nconst SearchBar = ({ update }) =>\n    <div className=\"schedule-search\">\n        <input\n            type=\"text\"\n            className=\"schedule-search-input\"\n            placeholder=\"search for a team\"\n            style={{ textAlign: \"center\" }}\n            onChange={update}\n        ></input>\n    </div>\n\nexport default SearchBar;","import React, { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport SearchBar from './SearchBar';\n\nconst HomePage = () => {\n\n    const [search, setSearch] = useState();\n    const [redir, setRedir] = useState();\n\n    const updateSearch = ({ target: { value } }) => {\n        setSearch(value);\n    }\n\n    const readyRedirect = () => {\n        setRedir(true);\n    }\n\n    return <div className=\"row index-body row-md-5\">\n        <div className=\"col-md-4\"></div>\n        <div className=\"index-body-center col-md-4\">\n            <SearchBar update={updateSearch} />\n            {redir && <Redirect to={`/teams/${search}`} />}\n            <button onClick={readyRedirect}>GO</button>\n        </div>\n        <div className=\"col-md-4\"></div>\n    </div>\n}\n\nexport default HomePage;","import React from 'react';\nimport '../styles/rankings.css';\n\nconst ToggleButton = ({ text, toggle, isActive }) => {\n    const inactiveClass = \"rankings-poll-toggle-button\";\n\n    return (\n        <button\n            className={`${inactiveClass} ${isActive ? \"active\" : \"inactive\"}`}\n            onClick={toggle}\n        >\n            {text}\n        </button>\n    )\n\n}\n\n\nexport default ToggleButton;","import React from 'react';\n\nconst Ranking = ({ data: { id, rank, school, firstPlaceVotes, points } }) =>\n    <li key={id}>\n        <span className=\"rankings-text\">{rank}</span>\n        <span className=\"rankings-text\">\n            <a className=\"rankings-text-link\" href={`/teams/${school.replace(\" \", \"%20\")}`}>\n                {school.replace(\"State\", \"St.\")}\n            </a>\n        </span>\n\n        <span className=\"rankings-text\">{firstPlaceVotes}</span>\n        <span className=\"rankings-text\">{points}</span>\n    </li>\n\n\nexport default Ranking;","import React, { useState, useEffect, useCallback } from 'react';\nimport ToggleButton from './ToggleButton';\nimport Ranking from './Ranking';\nimport '../styles/rankings.css';\n\n/* rank, school [name], conference, firstPlaceVotes, points */\n\nconst RankingsPage = () => {\n\n    const [data, setData] = useState([]);\n    const [displayData, setDisplayData] = useState([]);\n    const [currentYear, setCurrentYear] = useState(2019);\n    const [currentWeek, setCurrentWeek] = useState(15);\n    const [pollType, setPollType] = useState(1);\n\n    const fetchData = useCallback(async (poll) => {\n        const url = `https://api.collegefootballdata.com/rankings?year=${currentYear}&seasonType=regular`;\n        fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                console.log(res);\n                setData(res);\n                selectTime();\n                setDisplayData(res[currentWeek].polls[poll].ranks);\n            });\n    }, []); //use empty array to avoid infinite loop\n\n    const togglePoll = () => {\n        /* 1 = AP, 2 = Coaches */\n        setPollType(pollType === 1 ? 2 : 1);\n        console.log(`updated polltype to: ${pollType}`);\n    }\n\n    const selectTime = (year = 2019, week = 15) => {\n        setCurrentYear(year);\n    }\n\n    useEffect(() => {\n        fetchData(pollType);\n    }, [currentWeek, currentYear, pollType]);\n\n    return (\n        <div className=\"rankings-container\">\n            <div className=\"rankings-poll-toggle\">\n                <ToggleButton text=\"AP\" toggle={togglePoll} isActive={pollType === 1} />\n                <ToggleButton text=\"Coaches\" toggle={togglePoll} isActive={pollType === 2} />\n            </div>\n            <div className=\"rankings-display\">\n                <ul className=\"rankings-list\">\n                    {displayData.map(school =>\n                        <Ranking data={school} />\n                    )}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default RankingsPage;","import React from 'react';\n\nconst TeamSelect = ({ opts, onSelect }) => {\n    return (\n        <select onChange={onSelect}>\n            {opts.map(opt =>\n                <option value={opt}>{opt}</option>\n            )}\n        </select>\n    );\n};\n\nexport default TeamSelect;","import React from 'react';\nimport colorHandler from '../colorHandler';\n\nconst TeamPanel = ({ props }) => {\n    \n    const { id, color, alt_color, abbreviation, highlight, school } = props;\n\n    return (\n        <div\n            key={id}\n            className={`${highlight ? \"team-square\" : \"team-square faded\"}`}\n            style={{\n                backgroundColor: `${color}`,\n                borderColor: `${alt_color}`,\n            }}\n        >\n            <a\n                href={`/teams/${school}`}\n                className=\"link-no-decoration\"\n                style={{ color: colorHandler.colorDiff(alt_color, color) ? `${alt_color}` : \"#FFFFFF\" }}\n            >\n                <span>{abbreviation}</span>\n            </a>\n        </div>\n    );\n};\n\nexport default TeamPanel;","import React from 'react';\n\nconst ReturnToTopButton = () =>\n    <div className=\"return-to-top\">\n        <button onClick={() => window.scrollTo(0, 0)}>\n            Return to top\n        </button>\n    </div>\n\nexport default ReturnToTopButton;","import React, { useEffect, useCallback, useState } from 'react';\nimport TeamSelect from './TeamSelect';\nimport TeamPanel from './TeamPanel';\nimport ReturnToTopButton from './ReturnToTopButton';\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport '../styles/teams.css';\n\nconst TeamsPage = () => {\n\n    const [data, setData] = useState([]);\n    const [sortDirection, setSortDirection] = useState(\"A-Z\");\n    const [loading, setLoading] = useState(true);\n\n    const year = 2019;\n\n    const sortDirections = [\n        \"A-Z\",\n        \"Z-A\",\n        \"A-Z by Conference\",\n        \"Z-A by Conference\"\n    ];\n\n    const conferences = [\n        \"(none)\",\n        \"ACC\",\n        \"American Athletic\",\n        \"Big 12\",\n        \"Big Ten\",\n        \"Conference USA\",\n        \"FBS Independents\",\n        \"Mid-American\",\n        \"Mountain West\",\n        \"Pac-12\",\n        \"SEC\",\n        \"Sun Belt\"\n    ];\n\n    const fetchData = useCallback(async () => {\n        const url = `https://api.collegefootballdata.com/teams/fbs?year=${year}`;\n        fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                res = res.map(team => {\n                    return { ...team, highlight: true };\n                });\n                setData(res);\n                setLoading(false);\n                console.log(res);\n            });\n    }, []); //use empty array to avoid infinite loop\n\n    const sortDisplay = ({ target: { value: sort } }) => {\n        let sortedData;\n        if (sort == \"A-Z\") {\n            sortedData = data\n                .sort((a, b) => {\n                    return a.abbreviation <= b.abbreviation ? -1 : 1;\n                });\n        }\n        else if (sort == \"Z-A\") {\n            sortedData = data\n                .sort((a, b) => {\n                    return a.abbreviation >= b.abbreviation ? -1 : 1;\n                });\n        }\n        else if (sort == \"A-Z by Conference\") {\n            sortedData = data\n                .sort((a, b) => {\n                    return a.conference <= b.conference ? -1 : 1;\n                });\n        }\n        else if (sort == \"Z-A by Conference\") {\n            sortedData = data\n                .sort((a, b) => {\n                    return a.conference >= b.conference ? -1 : 1;\n                });\n        }\n        setData(sortedData);\n        setSortDirection(sort);\n    }\n\n    const highlightConferences = ({ target: { value: conf } }) => {\n        console.log(\"conf = \", conf);\n        const highlightedData = data;\n\n        if (conf == \"(none)\") {\n            highlightedData.forEach(team => {\n                team.highlight = true;\n            })\n        }\n        else {\n            highlightedData.forEach(team => {\n                team.highlight = team.conference == conf;\n            });\n        }\n\n        setData(highlightedData);\n        setSortDirection({});\n    }\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"teams-container\">\n            <div className=\"teams-header\">\n                <span style={{ float: \"left\" }}>Highlight:\n                    <TeamSelect opts={conferences} onSelect={highlightConferences} />\n                </span>\n                <span style={{ float: \"right\" }}>Sort by:\n                    <TeamSelect opts={sortDirections} onSelect={sortDisplay} />\n                </span>\n            </div>\n            <div className=\"teams-mosaic\">\n                {loading && <Spinner animation=\"border\" role=\"status\"/>}\n                {data.map(team => {\n                    return <TeamPanel props={team} />\n                })}\n            </div>\n            <ReturnToTopButton />\n        </div>\n    );\n};\n\nTeamsPage.propTypes = {};\n\nexport default TeamsPage;","import React, { useCallback, useEffect, useState } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\n\nimport '../styles/teams.css';\n\nconst TeamDetails = ({ colorPalette, match }) => {\n\n    const { params: { teamName } } = match;\n\n    const [data, setData] = useState([]);\n    const [display, setDisplay] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const year = 2019;\n\n    const fetchData = useCallback(async () => {\n        const url1 = `https://api.collegefootballdata.com/records?year=${year}&team=${teamName.replace(\" \", \"%20\")}`;\n        const url2 = `https://api.collegefootballdata.com/teams/fbs?year=${year}`;\n\n        fetch(url1)\n            .then(res => res.json())\n            .then(res => {\n                setDisplay(display => ([\n                    res[0].total.wins,\n                    res[0].total.losses,\n                    res[0].team,\n                    res[0].conference,\n                    ...display\n                ]));\n                setLoading(false);\n\n            });\n        fetch(url2)\n            .then(res => res.json())\n            .then(res => {\n                const thisSchool = res.find(({ school }) =>\n                    school == teamName\n                );\n                const { mascot, color, alt_color } = thisSchool;\n                const logoUrl = thisSchool.logos[0];\n                colorPalette([color, alt_color]);\n                setData(data => ([...data, mascot, logoUrl]));\n                setDisplay(display => ([...display, mascot, logoUrl]));\n            })\n    }, []); //use empty array to avoid infinite loop\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"details-container\">\n            {loading && <Spinner animation=\"border\" role=\"status\" />}\n            <img className=\"details-logo\" src={display[5]}></img>\n            <p className=\"details-title\">\n                <span className=\"details-heading\">{display[2]}</span>\n                <span className=\"details-sub-heading\">{display[4]}</span>\n            </p>\n            <p className=\"details-title\">\n                <span className=\"details-sub-heading\">{display[3]}</span>\n            </p>\n            <p className=\"details-title\">\n                <span className=\"details-sub-heading\">{year} record: {display[0]} - {display[1]}</span>\n            </p>\n        </div>\n    );\n};\n\nexport default TeamDetails;","import React, {forwardRef} from 'react';\n\nconst GameEvent = forwardRef((props, ref) => {\n\n    const { home_team, away_team, start_date, venue } = props.data;\n\n    const parseDate = dateTime => {\n        const date = dateTime.split(\"T\")[0];\n        const usDate = date.split(\"-\");\n        return `${usDate[1]}/${usDate[2]}/${usDate[0].slice(-2)}`\n    }\n\n    return (\n        <div className={`schedule-game${ref ? \" highlight\" : \"\"}`} ref={ref}>\n            <span className={`schedule-game-teams`}>\n                <span style={{float: \"left\"}}>\n                    <a href={`/teams/${home_team.replace(\" \", \"%20\")}`} className=\"schedule-game-link\">{home_team} </a>\n                    @\n                    <a href={`/teams/${away_team.replace(\" \", \"%20\")}`} className=\"schedule-game-link\"> {away_team}</a>\n                    </span>\n                <span style={{float: \"right\"}}>{parseDate(start_date)} at {venue}</span>\n            </span>\n        </div>\n    );\n});\n\n\nexport default GameEvent;","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport GameEvent from './GameEvent';\nimport ReturnToTopButton from './ReturnToTopButton';\nimport SearchBar from './SearchBar';\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport '../styles/schedule.css';\n\nconst SchedulePage = () => {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [isSearched,] = useState(false);\n    const [searchState, setSearchState] = useState(\"\");\n\n    const searchRef = useRef(null);\n\n    const fetchData = useCallback(async () => {\n        const url = `https://api.collegefootballdata.com/games?year=2020&week=1&seasonType=regular`;\n        fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                res.map(({ home_team, away_team, start_date, venue }) => {\n                    const gameObj = { home_team, away_team, start_date, venue };\n                    setData(data => [...data, gameObj]);\n                })\n                setLoading(false);\n                console.log(res);\n            });\n    }, []);\n\n    useEffect(() => {\n        fetchData();\n    }, [isSearched]);\n\n    const scrollToRef = ref => window.scrollTo(0, ref.current.offsetTop);\n    const executeScroll = () => scrollToRef(searchRef);\n    const updateSearchState = ({target: {value: query}}) => {\n        console.log(\"seach query = \", query);\n        setSearchState(query.toLowerCase());\n    };\n    \n\n    return (\n        <div className=\"schedule-container\">\n            Upcoming games:\n            <SearchBar update={updateSearchState} />\n            <button className=\"schedule-search-button\" onClick={executeScroll}>Find</button>\n            {loading && <Spinner animation=\"border\" role=\"status\" />}\n            {data.map(game =>\n                <GameEvent\n                    data={game}\n                    ref={(game.home_team.toLowerCase() === searchState || game.away_team.toLowerCase() === searchState)\n                         ? searchRef \n                         : null}\n                />\n            )}\n            <ReturnToTopButton />\n        </div>\n    );\n};\n\n\nexport default SchedulePage;","import React, { useEffect } from 'react';\n\nconst Conference = ({ data }) => {\n    return (\n        <div className=\"conference-data\">\n            <span>{data[0]}</span>\n            <ul className=\"conference-data-list\">\n                {data[1].map(team =>\n                    <li>\n                    <a href={`/teams/${team.replace(\" \", \"%20\")}`} className=\"link-no-decoration\">{team}</a></li>\n                )}\n            </ul>\n        </div>\n    );\n};\n\n\nexport default Conference;","import React, { useCallback, useEffect, useState } from 'react';\nimport Conference from './Conference';\nimport '../styles/teams.css';\nimport ReturnToTopButton from './ReturnToTopButton';\n\nconst ConferencesPage = () => {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const conferences = {\n        \"American Athletic\": [],\n        \"ACC\": [],\n        \"Big 12\": [],\n        \"Big Ten\": [],\n        \"Conference USA\": [],\n        \"FBS Independents\": [],\n        \"Mid-American\": [],\n        \"Mountain West\": [],\n        \"Pac-12\": [],\n        \"SEC\": [],\n        \"Sun Belt\": []\n    };\n\n    const year = 2019;\n\n    const fetchData = useCallback(async () => {\n        const url = `https://api.collegefootballdata.com/teams/fbs?year=${year}`;\n        fetch(url)\n            .then(res => res.json())\n            .then(res => {\n                res.forEach(team => {\n                    for (const conf in conferences) {\n                        if (conf === team.conference) {\n                            conferences[conf] = [...conferences[conf], team.school];\n                        }\n                    }\n                });\n                setData(conferences);\n                setLoading(false);\n            });\n    }, []); //use empty array to avoid infinite loop\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <div className=\"conferences-container\">\n            {Object.entries(data).map(conf =>  <Conference data={conf} />)}\n            <ReturnToTopButton />\n        </div>\n    );\n};\n\n\nexport default ConferencesPage;","import React, { useEffect, useState } from 'react';\nimport Navbar from './components/Navbar';\nimport HomePage from './components/HomePage';\nimport RankingsPage from './components/RankingsPage';\nimport TeamsPage from './components/TeamsPage';\nimport TeamDetails from './components/TeamDetails';\nimport SchedulePage from './components/SchedulePage';\nimport ConferencesPage from './components/ConferencesPage';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\nimport './styles/App.css';\n\nfunction App() {\n\n  const [teamColors, setTeamColors] = useState([]);\n\n  return (\n    <div className=\"main\" style={{backgroundColor: `${teamColors[1]}`}}>\n      <Router>\n        <Navbar teamColors={teamColors} />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/rankings\" component={RankingsPage} />\n          <Route exact path=\"/teams\" component={TeamsPage} />\n          <Route \n            path=\"/teams/:teamName\"\n            render={props => <TeamDetails {...props} colorPalette={setTeamColors}/>} />\n          <Route path=\"/schedule\" component={SchedulePage} />\n          <Route path=\"/conferences\" component={ConferencesPage} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}